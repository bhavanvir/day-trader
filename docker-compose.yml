version: "3"

services:
  setup:
    container_name: setup
    build:
      context: ./setup
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      GIN_MODE: release
    networks:
      - nt-network

  authentication:
    container_name: authentication
    build:
      context: ./authentication
    ports:
      - "8888:8888"
    environment:
      PORT: 8888
      GIN_MODE: release
    networks:
      - nt-network

  transaction:
    container_name: transaction
    build:
      context: ./transaction
    ports:
      - "5433:5433"
    environment:
      PORT: 5433
      GIN_MODE: release
    networks:
      - nt-network

  rabbitmq3:
    image: rabbitmq:3-management
    build:
      context: ./rabbitmq
    hostname: rabbitmq3
    container_name: rabbitmq3
    environment:
      - RABBIMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.config
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - nt-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5

  engine:
    container_name: engine
    build:
      context: ./engine
    ports:
      - "8585:8585"
    environment:
      PORT: 8585
      GIN_MODE: release
    depends_on:
      mongo:
        condition: service_started
      execution:
        condition: service_started
      rabbitmq3:
        condition: service_healthy
    networks:
      - nt-network

  execution:
    container_name: execution
    build:
      context: ./execution
    environment:
      - RABBITMQ_HOST=rabbitmq3
    depends_on:
      rabbitmq3:
        condition: service_healthy
    restart: on-failure
    networks:
      - nt-network

  frontend:
    container_name: frontend
    build:
      context: ./client/app
    ports:
      - "3000:3000"
    networks:
      - nt-network

  user_database:
    container_name: user_database
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_PASSWORD: db123
      POSTGRES_USER: nt_user
      POSTGRES_DB: nt_db
    ports:
      - 5432:5432
    volumes:
      - ./user_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nt-network

  stock_database:
    container_name: stock_database
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_PASSWORD: db123
      POSTGRES_USER: nt_user
      POSTGRES_DB: nt_db
    ports:
      - 5431:5431
    volumes:
      - ./stock_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nt-network

  tx_database:
    container_name: tx_database
    image: postgres:16-bullseye
    restart: always
    environment:
      POSTGRES_PASSWORD: db123
      POSTGRES_USER: nt_user
      POSTGRES_DB: nt_db
    ports:
      - 5430:5430
    volumes:
      - ./tx_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nt-network

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - nt-network

  proxy:
    image: nginx:latest
    container_name: proxy
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - setup
      - authentication
      - transaction
      - engine
      - execution
      - user_database
      - stock_database
      - tx_database
      - mongo
    networks:
      - nt-network

  jmeter:
    profiles:
      - ci
    image: justb4/jmeter:latest
    container_name: jmeter
    platform: linux/amd64
    volumes:
      - ./tests:/tests
    depends_on:
      - setup
      - authentication
      - transaction
      - engine
      - user_database
      - stock_database
      - tx_database
    command: -n -t /tests/Seng468_Report1_No_Delay.jmx -l /tests/results.jtl
    network_mode: host

networks:
  nt-network:
